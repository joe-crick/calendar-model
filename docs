<!-- Generated by documentation.js. Update this documentation by updating the source code. -->

### Table of Contents

-   [getDate](#getdate)
-   [parse](#parse)
-   [isDate](#isdate)
-   [getDay](#getday)
-   [getNDays](#getndays)
-   [getRangeOfDates](#getrangeofdates)
-   [makeEventFinder](#makeeventfinder)
-   [formatDate](#formatdate)
-   [formatTimeSlot](#formattimeslot)
-   [getTwelveHourTime](#gettwelvehourtime)
-   [getTimePeriod](#gettimeperiod)
-   [getTwelveHourTimeSlots](#gettwelvehourtimeslots)
-   [getTwentyFourHourTimeSlots](#gettwentyfourhourtimeslots)
-   [getCalendarMonth](#getcalendarmonth)
-   [getNestedCalendarMonth](#getnestedcalendarmonth)
-   [monthNameFinder](#monthnamefinder)
-   [numToNameFinder](#numtonamefinder)
-   [getWeekForDate](#getweekfordate)
-   [getDateInFollowingWeek](#getdateinfollowingweek)
-   [getNWeeks](#getnweeks)
-   [getNWeeksNested](#getnweeksnested)
-   [weekDayNameFinder](#weekdaynamefinder)
-   [startOfWeek](#startofweek)
-   [addDays](#adddays)

## getDate

Given a valid date string, or Date object, returns a Date object.

**Parameters**

-   `date` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 

Returns **[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)** 

## parse

Convert the given argument to an instance of Date.

If the argument is an instance of Date, the function returns its clone.

If the argument is a number, it is treated as a timestamp.

If an argument is a string, the function tries to parse it.
Function accepts complete ISO 8601 formats as well as partial implementations.
ISO 8601: <http://en.wikipedia.org/wiki/ISO_8601>

If all above fails, the function passes the given argument to Date constructor.

**Parameters**

-   `argument` **([Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) \| [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number))** the value to convert
-   `options` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)?** the object with options
    -   `options.additionalDigits` **(`0` \| `1` \| `2`)?** the additional number of digits in the extended year format (optional, default `2`)
-   `dirtyOptions`  

**Examples**

```javascript
// Convert string '2014-02-11T11:30:30' to date:
var result = parse('2014-02-11T11:30:30')
//=> Tue Feb 11 2014 11:30:30
```

```javascript
// Parse string '+02014101',
// if the additional number of digits in the extended year format is 1:
var result = parse('+02014101', {additionalDigits: 1})
//=> Fri Apr 11 2014 00:00:00
```

Returns **[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)** the parsed date in the local time zone

## isDate

Is the given argument an instance of Date?

**Parameters**

-   `argument` **any** the argument to check

**Examples**

```javascript
// Is 'mayonnaise' a Date?
var result = isDate('mayonnaise')
//=> false
```

Returns **[Boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** the given argument is an instance of Date

## getDay

CONSTRUCTOR: Returns a day object, which is a JS Date, a formatted string version of the date, and some convenience
methods that provide ISO Date, and Week Day Number. Also contains a set of Events for that day.
_getEvents-: A function that returns a set of events when given a date object.
\_formatDate_: A function that returns a valid formatted date. Defaults to date-fns format function, International date format.

**Parameters**

-   `date` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `toISOString` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.date`  
    -   `$0.getEvents`   (optional, default `noOp`)
    -   `$0.formatDate`   (optional, default `format`)
    -   `$0.toISOString`   (optional, default `Date.prototype.toISOString`)

Returns **{date: [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date), formattedDate: [string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String), isoDate: any, weekDayNumber: [number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number), dayOfMonth: [number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number), events}** 

## getNDays

Creates an array of dates that corresponds to a range

**Parameters**

-   `startDate` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `numOfDays` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.startDate`  
    -   `$0.numOfDays`  
    -   `$0.getEvents`  
    -   `$0.formatDate`  

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;Day>** 

## getRangeOfDates

Return the array of dates within the specified range.

**Parameters**

-   `startDate` **([Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) \| [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number))** the first date
-   `endDate` **([Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) \| [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number))** the last date
-   `dirtyStartDate`  
-   `dirtyEndDate`  

**Examples**

```javascript
// Each day between 6 October 2014 and 10 October 2014:
var result = eachDay(
  new Date(2014, 9, 6),
  new Date(2014, 9, 10)
)
//=> [
//   Mon Oct 06 2014 00:00:00,
//   Tue Oct 07 2014 00:00:00,
//   Wed Oct 08 2014 00:00:00,
//   Thu Oct 09 2014 00:00:00,
//   Fri Oct 10 2014 00:00:00
// ]
```

-   Throws **[Error](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)** startDate cannot be after endDate

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)>** the array with starts of days from the day of startDate to the day of endDate

## makeEventFinder

Given a data set where events can be obtained as date properties off an object, return the set of events
for a given date.

**Parameters**

-   `data` **any** 

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;[Event](https://developer.mozilla.org/en-US/docs/Web/API/Event)>** An Array of Events

## formatDate

Formats a date in International format

**Parameters**

-   `date` **any** 

Returns **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** A formatted date

## formatTimeSlot

Formats a number with a leading zero, if it is below 10

**Parameters**

-   `slot`  

Returns **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** 

## getTwelveHourTime

Given a value from 0 - n, returns the correct Twelve-hour time number

**Parameters**

-   `slot`  

Returns **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 

## getTimePeriod

Given a value from 0 - n, returns the associated time period

**Parameters**

-   `slot`  

Returns **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** 

## getTwelveHourTimeSlots

Returns 24 time slots, from 12:00 AM - 12:00 PM

Returns **\[[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)]** 

## getTwentyFourHourTimeSlots

Returns 24 time slots, from 00:00 - 24:00

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)** 

## getCalendarMonth

CONSTRUCTOR: Convenience method. Returns a set of weeks for a predefined month range. Specifically,
this returns a calendar month - i.e., 5 weeks/35 days. A calendar month includes days preceding and following
the actual days of the month.

**Parameters**

-   `startDate` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `weeksInMonth` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.startDate`  
    -   `$0.getEvents`  
    -   `$0.formatDate`  
    -   `$0.weeksInMonth`   (optional, default `WEEKS_IN_MONTH`)

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;Day>** 

## getNestedCalendarMonth

Returns a nested array of Days. Each set of days is grouped in a week-long array.

**Parameters**

-   `startDate` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `weeksInMonth` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.startDate`  
    -   `$0.getEvents`  
    -   `$0.formatDate`  
    -   `$0.weeksInMonth`   (optional, default `WEEKS_IN_MONTH`)

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)** 

## monthNameFinder

Returns a month name, when given a month number

**Parameters**

-   `monthNames` **any?= MONTH_NAMES** 

Returns **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 

## numToNameFinder

Meta function for finding a name based on a number.

**Parameters**

-   `nameSet` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 

Returns **getName** 

## getWeekForDate

Creates an array of dates that corresponds to a week range

**Parameters**

-   `startDate` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `numOfDays` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.startDate`  
    -   `$0.getEvents`  
    -   `$0.formatDate`  
    -   `$0.numOfDays`   (optional, default `6`)

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;Day>** 

## getDateInFollowingWeek

Returns the date one week later when given a date

**Parameters**

-   `date` **[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)** 
-   `daysInWeek` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)?= 7** 

Returns **[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)** 

## getNWeeks

Returns a set of _n_ weeks, when given a start seed.

**Parameters**

-   `startDate` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `numOfWeeks` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.startDate`  
    -   `$0.getEvents`  
    -   `$0.formatDate`  
    -   `$0.numOfWeeks`  

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;Day>** 

## getNWeeksNested

Returns a nested array of Days. Each set of days is grouped in a week-long array.

**Parameters**

-   `startDate` **([String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date))** 
-   `getEvents` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `formatDate` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** 
-   `numOfWeeks` **[number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** 
-   `$0` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** 
    -   `$0.startDate`  
    -   `$0.getEvents`  
    -   `$0.formatDate`  
    -   `$0.numOfWeeks`  

Returns **[Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)** 

## weekDayNameFinder

CONSTRUCTOR: Creates a function that returns Week DAy names.

**Parameters**

-   `weekDayNames` **any?= WEEK_DAY_NAMES** 

## startOfWeek

Return the start of a week for the given date.
The result will be in the local timezone.

**Parameters**

-   `date` **([Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) \| [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number))** the original date
-   `options` **[Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)?** the object with options
    -   `options.weekStartsOn` **[Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)?** the index of the first day of the week (0 - Sunday) (optional, default `0`)
-   `dirtyDate`  
-   `dirtyOptions`  

**Examples**

```javascript
// The start of a week for 2 September 2014 11:55:00:
var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
//=> Sun Aug 31 2014 00:00:00
```

```javascript
// If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})
//=> Mon Sep 01 2014 00:00:00
```

Returns **[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)** the start of a week

## addDays

Add the specified number of days to the given date.

**Parameters**

-   `date` **([Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) \| [String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) \| [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number))** the date to be changed
-   `amount` **[Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)** the amount of days to be added
-   `dirtyDate`  
-   `dirtyAmount`  

**Examples**

```javascript
// Add 10 days to 1 September 2014:
var result = addDays(new Date(2014, 8, 1), 10)
//=> Thu Sep 11 2014 00:00:00
```

Returns **[Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)** the new date with the days added
